//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Microsoft.Extensions.DependencyInjection
{
    public static partial class HttpClientLatencyTelemetryExtensions
    {
        public static IServiceCollection AddHttpClientLatencyTelemetry(this IServiceCollection services, Configuration.IConfigurationSection section) { throw null; }

        public static IServiceCollection AddHttpClientLatencyTelemetry(this IServiceCollection services, System.Action<Http.Latency.HttpClientLatencyTelemetryOptions> configure) { throw null; }

        public static IServiceCollection AddHttpClientLatencyTelemetry(this IServiceCollection services) { throw null; }
    }

    public static partial class HttpClientLoggingHttpClientBuilderExtensions
    {
        public static IHttpClientBuilder AddExtendedHttpClientLogging(this IHttpClientBuilder builder, Configuration.IConfigurationSection section) { throw null; }

        public static IHttpClientBuilder AddExtendedHttpClientLogging(this IHttpClientBuilder builder, System.Action<Http.Logging.LoggingOptions> configure) { throw null; }

        public static IHttpClientBuilder AddExtendedHttpClientLogging(this IHttpClientBuilder builder) { throw null; }
    }

    public static partial class HttpClientLoggingServiceCollectionExtensions
    {
        public static IServiceCollection AddExtendedHttpClientLogging(this IServiceCollection services, Configuration.IConfigurationSection section) { throw null; }

        public static IServiceCollection AddExtendedHttpClientLogging(this IServiceCollection services, System.Action<Http.Logging.LoggingOptions> configure) { throw null; }

        public static IServiceCollection AddExtendedHttpClientLogging(this IServiceCollection services) { throw null; }

        public static IServiceCollection AddHttpClientLogEnricher<T>(this IServiceCollection services)
            where T : class, Http.Logging.IHttpClientLogEnricher { throw null; }
    }

    public static partial class HttpDiagnosticsServiceCollectionExtensions
    {
        public static IServiceCollection AddDownstreamDependencyMetadata(this IServiceCollection services, Http.Diagnostics.IDownstreamDependencyMetadata downstreamDependencyMetadata) { throw null; }

        public static IServiceCollection AddDownstreamDependencyMetadata<T>(this IServiceCollection services)
            where T : class, Http.Diagnostics.IDownstreamDependencyMetadata { throw null; }
    }
}

namespace Microsoft.Extensions.Http.Latency
{
    public partial class HttpClientLatencyTelemetryOptions
    {
        public bool EnableDetailedLatencyBreakdown { get { throw null; } set { } }
    }
}

namespace Microsoft.Extensions.Http.Logging
{
    public static partial class HttpClientLoggingTagNames
    {
        public const string Duration = "Duration";
        public const string Host = "server.address";
        public const string Method = "http.request.method";
        public const string Path = "url.path";
        public const string RequestBody = "RequestBody";
        public const string RequestHeaderPrefix = "http.request.header.";
        public const string ResponseBody = "ResponseBody";
        public const string ResponseHeaderPrefix = "http.response.header.";
        public const string StatusCode = "http.response.status_code";
        public static System.Collections.Generic.IReadOnlyList<string> TagNames { get { throw null; } }
    }

    public partial interface IHttpClientLogEnricher
    {
        void Enrich(Extensions.Diagnostics.Enrichment.IEnrichmentTagCollector collector, System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpResponseMessage? response, System.Exception? exception);
    }

    public partial class LoggingOptions
    {
        public System.TimeSpan BodyReadTimeout { get { throw null; } set { } }

        [System.ComponentModel.DataAnnotations.Range(1, 1572864)]
        public int BodySizeLimit { get { throw null; } set { } }

        public bool LogBody { get { throw null; } set { } }

        [System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0003", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
        public bool LogContentHeaders { get { throw null; } set { } }

        public bool LogRequestStart { get { throw null; } set { } }

        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ISet<string> RequestBodyContentTypes { get { throw null; } set { } }

        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, Compliance.Classification.DataClassification> RequestHeadersDataClasses { get { throw null; } set { } }

        public OutgoingPathLoggingMode RequestPathLoggingMode { get { throw null; } set { } }

        public Diagnostics.HttpRouteParameterRedactionMode RequestPathParameterRedactionMode { get { throw null; } set { } }

        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ISet<string> ResponseBodyContentTypes { get { throw null; } set { } }

        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, Compliance.Classification.DataClassification> ResponseHeadersDataClasses { get { throw null; } set { } }

        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, Compliance.Classification.DataClassification> RouteParameterDataClasses { get { throw null; } set { } }
    }

    public enum OutgoingPathLoggingMode
    {
        Formatted = 0,
        Structured = 1
    }
}

namespace System.Net
{
    public static partial class HttpDiagnosticsHttpWebRequestExtensions
    {
        public static Microsoft.Extensions.Http.Diagnostics.RequestMetadata? GetRequestMetadata(this HttpWebRequest request) { throw null; }

        public static void SetRequestMetadata(this HttpWebRequest request, Microsoft.Extensions.Http.Diagnostics.RequestMetadata metadata) { }
    }
}

namespace System.Net.Http
{
    public static partial class HttpDiagnosticsHttpRequestMessageExtensions
    {
        public static Microsoft.Extensions.Http.Diagnostics.RequestMetadata? GetRequestMetadata(this HttpRequestMessage request) { throw null; }

        public static void SetRequestMetadata(this HttpRequestMessage request, Microsoft.Extensions.Http.Diagnostics.RequestMetadata metadata) { }
    }
}