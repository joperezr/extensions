//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Microsoft.Extensions.Hosting
{
    [System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0009", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
    public static partial class FakeHostingExtensions
    {
        public static IHostBuilder AddFakeLoggingOutputSink(this IHostBuilder builder, System.Action<string> callback) { throw null; }

        public static IHostBuilder Configure(this IHostBuilder builder, System.Action<IHostBuilder> configure) { throw null; }

        public static IHostBuilder ConfigureAppConfiguration(this IHostBuilder builder, string key, string value) { throw null; }

        public static IHostBuilder ConfigureAppConfiguration(this IHostBuilder builder, params (string key, string value)[] configurations) { throw null; }

        public static IHostBuilder ConfigureHostConfiguration(this IHostBuilder builder, string key, string value) { throw null; }

        public static IHostBuilder ConfigureHostConfiguration(this IHostBuilder builder, params (string key, string value)[] configurations) { throw null; }

        public static Logging.Testing.FakeLogCollector GetFakeLogCollector(this IHost host) { throw null; }

        public static Compliance.Testing.FakeRedactionCollector GetFakeRedactionCollector(this IHost host) { throw null; }

        public static System.Threading.Tasks.Task StartAndStopAsync(this IHostedService service, System.Threading.CancellationToken cancellationToken = default) { throw null; }
    }
}

namespace Microsoft.Extensions.Hosting.Testing
{
    public sealed partial class FakeHost : IHost, System.IDisposable
    {
        internal FakeHost() { }

        public System.IServiceProvider Services { get { throw null; } }

        public static IHostBuilder CreateBuilder() { throw null; }

        public static IHostBuilder CreateBuilder(FakeHostOptions options) { throw null; }

        public static IHostBuilder CreateBuilder(System.Action<FakeHostOptions> configure) { throw null; }

        public void Dispose() { }

        public System.Threading.Tasks.Task StartAsync(System.Threading.CancellationToken cancellationToken = default) { throw null; }

        public System.Threading.Tasks.Task StopAsync(System.Threading.CancellationToken cancellationToken = default) { throw null; }
    }

    public partial class FakeHostOptions
    {
        public bool FakeLogging { get { throw null; } set { } }

        public bool FakeRedaction { get { throw null; } set { } }

        public System.TimeSpan ShutDownTimeout { get { throw null; } set { } }

        public System.TimeSpan StartUpTimeout { get { throw null; } set { } }

        public System.TimeSpan TimeToLive { get { throw null; } set { } }

        public bool ValidateOnBuild { get { throw null; } set { } }

        public bool ValidateScopes { get { throw null; } set { } }
    }
}