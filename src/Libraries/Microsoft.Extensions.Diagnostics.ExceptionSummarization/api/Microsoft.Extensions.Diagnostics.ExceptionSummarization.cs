//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Microsoft.Extensions.DependencyInjection
{
    public static partial class ExceptionSummarizationServiceCollectionExtensions
    {
        public static IServiceCollection AddExceptionSummarizer(this IServiceCollection services, System.Action<Diagnostics.ExceptionSummarization.IExceptionSummarizationBuilder> configure) { throw null; }

        public static IServiceCollection AddExceptionSummarizer(this IServiceCollection services) { throw null; }
    }
}

namespace Microsoft.Extensions.Diagnostics.ExceptionSummarization
{
    public static partial class ExceptionSummarizationBuilderExtensions
    {
        public static IExceptionSummarizationBuilder AddHttpProvider(this IExceptionSummarizationBuilder builder) { throw null; }
    }

    public readonly partial struct ExceptionSummary : System.IEquatable<ExceptionSummary>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public ExceptionSummary(string exceptionType, string description, string additionalDetails) { }

        public string AdditionalDetails { get { throw null; } }

        public string Description { get { throw null; } }

        public string ExceptionType { get { throw null; } }

        public readonly bool Equals(ExceptionSummary other) { throw null; }

        public override readonly bool Equals(object? obj) { throw null; }

        public override readonly int GetHashCode() { throw null; }

        public static bool operator ==(ExceptionSummary left, ExceptionSummary right) { throw null; }

        public static bool operator !=(ExceptionSummary left, ExceptionSummary right) { throw null; }

        public override readonly string ToString() { throw null; }
    }

    public partial interface IExceptionSummarizationBuilder
    {
        DependencyInjection.IServiceCollection Services { get; }

        IExceptionSummarizationBuilder AddProvider<T>()
            where T : class, IExceptionSummaryProvider;
    }

    public partial interface IExceptionSummarizer
    {
        ExceptionSummary Summarize(System.Exception exception);
    }

    public partial interface IExceptionSummaryProvider
    {
        System.Collections.Generic.IReadOnlyList<string> Descriptions { get; }

        System.Collections.Generic.IEnumerable<System.Type> SupportedExceptionTypes { get; }

        int Describe(System.Exception exception, out string? additionalDetails);
    }
}