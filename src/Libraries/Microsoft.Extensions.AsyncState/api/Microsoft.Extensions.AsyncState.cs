//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Microsoft.Extensions.AsyncState
{
    public readonly partial struct AsyncStateToken : System.IEquatable<AsyncStateToken>
    {
        private readonly int _dummyPrimitive;
        public readonly bool Equals(AsyncStateToken other) { throw null; }

        public override readonly bool Equals(object? obj) { throw null; }

        public override readonly int GetHashCode() { throw null; }

        public static bool operator ==(AsyncStateToken left, AsyncStateToken right) { throw null; }

        public static bool operator !=(AsyncStateToken left, AsyncStateToken right) { throw null; }
    }

    public partial interface IAsyncContext<T>
    {
        T? Get();
        void Set(T? context);
        bool TryGet(out T? context);
    }

    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    public partial interface IAsyncLocalContext<T> : IAsyncContext<T> where T : class
    {
    }

    public partial interface IAsyncState
    {
        object? Get(AsyncStateToken token);
        void Initialize();
        AsyncStateToken RegisterAsyncContext();
        void Reset();
        void Set(AsyncStateToken token, object? value);
        bool TryGet(AsyncStateToken token, out object? value);
    }
}

namespace Microsoft.Extensions.DependencyInjection
{
    public static partial class AsyncStateExtensions
    {
        public static IServiceCollection AddAsyncState(this IServiceCollection services) { throw null; }
    }
}