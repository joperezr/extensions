//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Microsoft.Extensions.DependencyInjection
{
    public static partial class ResourceMonitoringServiceCollectionExtensions
    {
        [System.Obsolete("This API is obsolete and will be removed in a future version. Consider using Resource Monitoring observable instruments.", DiagnosticId = "EXTOBS0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
        public static IServiceCollection AddResourceMonitoring(this IServiceCollection services, System.Action<Diagnostics.ResourceMonitoring.IResourceMonitorBuilder> configure) { throw null; }

        public static IServiceCollection AddResourceMonitoring(this IServiceCollection services) { throw null; }
    }
}

namespace Microsoft.Extensions.Diagnostics.ResourceMonitoring
{
    [System.Obsolete("This API is obsolete and will be removed in a future version. Consider using Resource Monitoring observable instruments.", DiagnosticId = "EXTOBS0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
    public partial interface IResourceMonitor
    {
        ResourceUtilization GetUtilization(System.TimeSpan window);
    }

    [System.Obsolete("This API is obsolete and will be removed in a future version. Consider using Resource Monitoring observable instruments.", DiagnosticId = "EXTOBS0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
    public partial interface IResourceMonitorBuilder
    {
        DependencyInjection.IServiceCollection Services { get; }

        IResourceMonitorBuilder AddPublisher<T>()
            where T : class, IResourceUtilizationPublisher;
    }

    [System.Obsolete("This API is obsolete and will be removed in a future version. Consider using Resource Monitoring observable instruments.", DiagnosticId = "EXTOBS0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
    public partial interface IResourceUtilizationPublisher
    {
        System.Threading.Tasks.ValueTask PublishAsync(ResourceUtilization utilization, System.Threading.CancellationToken cancellationToken);
    }

    [System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0008", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
    [System.Obsolete("This API is obsolete and will be removed in a future version. Consider using Resource Monitoring observable instruments.", DiagnosticId = "EXTOBS0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
    public partial interface ISnapshotProvider
    {
        SystemResources Resources { get; }

        Snapshot GetSnapshot();
    }

    [System.Obsolete("This API is obsolete and will be removed in a future version. Consider using Resource Monitoring observable instruments.", DiagnosticId = "EXTOBS0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
    public static partial class ResourceMonitoringBuilderExtensions
    {
        public static IResourceMonitorBuilder ConfigureMonitor(this IResourceMonitorBuilder builder, Configuration.IConfigurationSection section) { throw null; }

        public static IResourceMonitorBuilder ConfigureMonitor(this IResourceMonitorBuilder builder, System.Action<ResourceMonitoringOptions> configure) { throw null; }
    }

    public partial class ResourceMonitoringOptions
    {
        [System.Obsolete("This API is obsolete and will be removed in a future version. Consider using Resource Monitoring observable instruments.", DiagnosticId = "EXTOBS0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
        public System.TimeSpan CollectionWindow { get { throw null; } set { } }

        [System.Obsolete("This API is obsolete and will be removed in a future version. Consider using Resource Monitoring observable instruments.", DiagnosticId = "EXTOBS0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
        public System.TimeSpan CpuConsumptionRefreshInterval { get { throw null; } set { } }

        [System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0008", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
        public bool EnableSystemDiskIoMetrics { get { throw null; } set { } }

        [System.Obsolete("This API is obsolete and will be removed in a future version. Consider using Resource Monitoring observable instruments.", DiagnosticId = "EXTOBS0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
        public System.TimeSpan MemoryConsumptionRefreshInterval { get { throw null; } set { } }

        [System.Obsolete("This API is obsolete and will be removed in a future version. Consider using Resource Monitoring observable instruments.", DiagnosticId = "EXTOBS0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
        public System.TimeSpan PublishingWindow { get { throw null; } set { } }

        [System.Obsolete("This API is obsolete and will be removed in a future version. Consider using Resource Monitoring observable instruments.", DiagnosticId = "EXTOBS0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
        public System.TimeSpan SamplingInterval { get { throw null; } set { } }

        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ISet<string> SourceIpAddresses { get { throw null; } set { } }

        [System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0008", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
        public bool UseLinuxCalculationV2 { get { throw null; } set { } }

        [System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0008", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
        public bool UseZeroToOneRangeForMetrics { get { throw null; } set { } }
    }

    [System.Obsolete("This API is obsolete and will be removed in a future version. Consider using Resource Monitoring observable instruments.", DiagnosticId = "EXTOBS0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
    public readonly partial struct ResourceUtilization
    {
        private readonly int _dummyPrimitive;
        public ResourceUtilization(double cpuUsedPercentage, ulong memoryUsedInBytes, SystemResources systemResources) { }

        public double CpuUsedPercentage { get { throw null; } }

        public ulong MemoryUsedInBytes { get { throw null; } }

        public double MemoryUsedPercentage { get { throw null; } }

        [System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0008", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
        public Snapshot Snapshot { get { throw null; } }

        public SystemResources SystemResources { get { throw null; } }
    }

    [System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0008", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
    [System.Obsolete("This API is obsolete and will be removed in a future version. Consider using Resource Monitoring observable instruments.", DiagnosticId = "EXTOBS0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
    public readonly partial struct Snapshot
    {
        private readonly int _dummyPrimitive;
        public Snapshot(System.TimeSpan totalTimeSinceStart, System.TimeSpan kernelTimeSinceStart, System.TimeSpan userTimeSinceStart, ulong memoryUsageInBytes) { }

        public System.TimeSpan KernelTimeSinceStart { get { throw null; } }

        public ulong MemoryUsageInBytes { get { throw null; } }

        public System.TimeSpan TotalTimeSinceStart { get { throw null; } }

        public System.TimeSpan UserTimeSinceStart { get { throw null; } }
    }

    [System.Obsolete("This API is obsolete and will be removed in a future version. Consider using Resource Monitoring observable instruments.", DiagnosticId = "EXTOBS0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
    public readonly partial struct SystemResources
    {
        private readonly int _dummyPrimitive;
        public SystemResources(double guaranteedCpuUnits, double maximumCpuUnits, ulong guaranteedMemoryInBytes, ulong maximumMemoryInBytes) { }

        public double GuaranteedCpuUnits { get { throw null; } }

        public ulong GuaranteedMemoryInBytes { get { throw null; } }

        public double MaximumCpuUnits { get { throw null; } }

        public ulong MaximumMemoryInBytes { get { throw null; } }
    }
}