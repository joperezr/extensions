//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Microsoft.Extensions.DependencyInjection
{
    public static partial class ResilienceHttpClientBuilderExtensions
    {
        public static Http.Resilience.IHttpResiliencePipelineBuilder AddResilienceHandler(this IHttpClientBuilder builder, string pipelineName, System.Action<Polly.ResiliencePipelineBuilder<System.Net.Http.HttpResponseMessage>, Http.Resilience.ResilienceHandlerContext> configure) { throw null; }

        public static Http.Resilience.IHttpResiliencePipelineBuilder AddResilienceHandler(this IHttpClientBuilder builder, string pipelineName, System.Action<Polly.ResiliencePipelineBuilder<System.Net.Http.HttpResponseMessage>> configure) { throw null; }

        public static Http.Resilience.IStandardHedgingHandlerBuilder AddStandardHedgingHandler(this IHttpClientBuilder builder, System.Action<Http.Resilience.IRoutingStrategyBuilder> configure) { throw null; }

        public static Http.Resilience.IStandardHedgingHandlerBuilder AddStandardHedgingHandler(this IHttpClientBuilder builder) { throw null; }

        public static Http.Resilience.IHttpStandardResiliencePipelineBuilder AddStandardResilienceHandler(this IHttpClientBuilder builder, Configuration.IConfigurationSection section) { throw null; }

        public static Http.Resilience.IHttpStandardResiliencePipelineBuilder AddStandardResilienceHandler(this IHttpClientBuilder builder, System.Action<Http.Resilience.HttpStandardResilienceOptions> configure) { throw null; }

        public static Http.Resilience.IHttpStandardResiliencePipelineBuilder AddStandardResilienceHandler(this IHttpClientBuilder builder) { throw null; }

        [System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
        public static IHttpClientBuilder RemoveAllResilienceHandlers(this IHttpClientBuilder builder) { throw null; }
    }
}

namespace Microsoft.Extensions.Http.Resilience
{
    public partial class HedgingEndpointOptions
    {
        [System.ComponentModel.DataAnnotations.Required]
        [Options.ValidateObjectMembers]
        public HttpCircuitBreakerStrategyOptions CircuitBreaker { get { throw null; } set { } }

        [System.ComponentModel.DataAnnotations.Required]
        [Options.ValidateObjectMembers]
        public HttpRateLimiterStrategyOptions RateLimiter { get { throw null; } set { } }

        [System.ComponentModel.DataAnnotations.Required]
        [Options.ValidateObjectMembers]
        public HttpTimeoutStrategyOptions Timeout { get { throw null; } set { } }
    }

    public partial class HttpCircuitBreakerStrategyOptions : Polly.CircuitBreaker.CircuitBreakerStrategyOptions<System.Net.Http.HttpResponseMessage>
    {
    }

    public static partial class HttpClientHedgingResiliencePredicates
    {
        [System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
        public static bool IsTransient(Polly.Outcome<System.Net.Http.HttpResponseMessage> outcome, System.Threading.CancellationToken cancellationToken) { throw null; }

        public static bool IsTransient(Polly.Outcome<System.Net.Http.HttpResponseMessage> outcome) { throw null; }
    }

    public static partial class HttpClientResiliencePredicates
    {
        [System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
        public static bool IsTransient(Polly.Outcome<System.Net.Http.HttpResponseMessage> outcome, System.Threading.CancellationToken cancellationToken) { throw null; }

        public static bool IsTransient(Polly.Outcome<System.Net.Http.HttpResponseMessage> outcome) { throw null; }
    }

    public partial class HttpHedgingStrategyOptions : Polly.Hedging.HedgingStrategyOptions<System.Net.Http.HttpResponseMessage>
    {
    }

    public partial class HttpRateLimiterStrategyOptions : Polly.RateLimiting.RateLimiterStrategyOptions
    {
    }

    public static partial class HttpResiliencePipelineBuilderExtensions
    {
        public static IHttpResiliencePipelineBuilder SelectPipelineBy(this IHttpResiliencePipelineBuilder builder, System.Func<System.IServiceProvider, System.Func<System.Net.Http.HttpRequestMessage, string>> selectorFactory) { throw null; }

        public static IHttpResiliencePipelineBuilder SelectPipelineByAuthority(this IHttpResiliencePipelineBuilder builder) { throw null; }
    }

    public partial class HttpRetryStrategyOptions : Polly.Retry.RetryStrategyOptions<System.Net.Http.HttpResponseMessage>
    {
        public bool ShouldRetryAfterHeader { get { throw null; } set { } }
    }

    [System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
    public static partial class HttpRetryStrategyOptionsExtensions
    {
        public static void DisableFor(this HttpRetryStrategyOptions options, params System.Net.Http.HttpMethod[] methods) { }

        public static void DisableForUnsafeHttpMethods(this HttpRetryStrategyOptions options) { }
    }

    public partial class HttpStandardHedgingResilienceOptions
    {
        [System.ComponentModel.DataAnnotations.Required]
        [Options.ValidateObjectMembers]
        public HedgingEndpointOptions Endpoint { get { throw null; } set { } }

        [System.ComponentModel.DataAnnotations.Required]
        [Options.ValidateObjectMembers]
        public HttpHedgingStrategyOptions Hedging { get { throw null; } set { } }

        [System.ComponentModel.DataAnnotations.Required]
        [Options.ValidateObjectMembers]
        public HttpTimeoutStrategyOptions TotalRequestTimeout { get { throw null; } set { } }
    }

    public partial class HttpStandardResilienceOptions
    {
        [System.ComponentModel.DataAnnotations.Required]
        [Options.ValidateObjectMembers]
        public HttpTimeoutStrategyOptions AttemptTimeout { get { throw null; } set { } }

        [System.ComponentModel.DataAnnotations.Required]
        [Options.ValidateObjectMembers]
        public HttpCircuitBreakerStrategyOptions CircuitBreaker { get { throw null; } set { } }

        [System.ComponentModel.DataAnnotations.Required]
        [Options.ValidateObjectMembers]
        public HttpRateLimiterStrategyOptions RateLimiter { get { throw null; } set { } }

        [System.ComponentModel.DataAnnotations.Required]
        [Options.ValidateObjectMembers]
        public HttpRetryStrategyOptions Retry { get { throw null; } set { } }

        [System.ComponentModel.DataAnnotations.Required]
        [Options.ValidateObjectMembers]
        public HttpTimeoutStrategyOptions TotalRequestTimeout { get { throw null; } set { } }
    }

    public static partial class HttpStandardResiliencePipelineBuilderExtensions
    {
        public static IHttpStandardResiliencePipelineBuilder Configure(this IHttpStandardResiliencePipelineBuilder builder, Configuration.IConfigurationSection section) { throw null; }

        public static IHttpStandardResiliencePipelineBuilder Configure(this IHttpStandardResiliencePipelineBuilder builder, System.Action<HttpStandardResilienceOptions, System.IServiceProvider> configure) { throw null; }

        public static IHttpStandardResiliencePipelineBuilder Configure(this IHttpStandardResiliencePipelineBuilder builder, System.Action<HttpStandardResilienceOptions> configure) { throw null; }

        public static IHttpStandardResiliencePipelineBuilder SelectPipelineBy(this IHttpStandardResiliencePipelineBuilder builder, System.Func<System.IServiceProvider, System.Func<System.Net.Http.HttpRequestMessage, string>> selectorFactory) { throw null; }

        public static IHttpStandardResiliencePipelineBuilder SelectPipelineByAuthority(this IHttpStandardResiliencePipelineBuilder builder) { throw null; }
    }

    public partial class HttpTimeoutStrategyOptions : Polly.Timeout.TimeoutStrategyOptions
    {
    }

    public partial interface IHttpResiliencePipelineBuilder
    {
        string PipelineName { get; }

        DependencyInjection.IServiceCollection Services { get; }
    }

    public partial interface IHttpStandardResiliencePipelineBuilder
    {
        string PipelineName { get; }

        DependencyInjection.IServiceCollection Services { get; }
    }

    public partial interface IRoutingStrategyBuilder
    {
        string Name { get; }

        DependencyInjection.IServiceCollection Services { get; }
    }

    public partial interface IStandardHedgingHandlerBuilder
    {
        string Name { get; }

        IRoutingStrategyBuilder RoutingStrategyBuilder { get; }

        DependencyInjection.IServiceCollection Services { get; }
    }

    public partial class OrderedGroupsRoutingOptions
    {
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Length(1, int.MaxValue)]
        [Options.ValidateEnumeratedItems]
        public System.Collections.Generic.IList<UriEndpointGroup> Groups { get { throw null; } set { } }
    }

    public partial class ResilienceHandler : System.Net.Http.DelegatingHandler
    {
        public ResilienceHandler(Polly.ResiliencePipeline<System.Net.Http.HttpResponseMessage> pipeline) { }

        public ResilienceHandler(System.Func<System.Net.Http.HttpRequestMessage, Polly.ResiliencePipeline<System.Net.Http.HttpResponseMessage>> pipelineProvider) { }

        protected override System.Net.Http.HttpResponseMessage Send(System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken) { throw null; }

        protected override System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync(System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken) { throw null; }
    }

    public sealed partial class ResilienceHandlerContext
    {
        internal ResilienceHandlerContext() { }

        public string BuilderName { get { throw null; } }

        public string InstanceName { get { throw null; } }

        public System.IServiceProvider ServiceProvider { get { throw null; } }

        public void EnableReloads<TOptions>(string? name = null) { }

        public TOptions GetOptions<TOptions>(string? name = null) { throw null; }

        public void OnPipelineDisposed(System.Action callback) { }
    }

    public static partial class RoutingStrategyBuilderExtensions
    {
        [System.Diagnostics.CodeAnalysis.DynamicDependency((System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes)(-1), typeof(OrderedGroupsRoutingOptions))]
        public static IRoutingStrategyBuilder ConfigureOrderedGroups(this IRoutingStrategyBuilder builder, Configuration.IConfigurationSection section) { throw null; }

        public static IRoutingStrategyBuilder ConfigureOrderedGroups(this IRoutingStrategyBuilder builder, System.Action<OrderedGroupsRoutingOptions, System.IServiceProvider> configure) { throw null; }

        public static IRoutingStrategyBuilder ConfigureOrderedGroups(this IRoutingStrategyBuilder builder, System.Action<OrderedGroupsRoutingOptions> configure) { throw null; }

        public static IRoutingStrategyBuilder ConfigureWeightedGroups(this IRoutingStrategyBuilder builder, Configuration.IConfigurationSection section) { throw null; }

        public static IRoutingStrategyBuilder ConfigureWeightedGroups(this IRoutingStrategyBuilder builder, System.Action<WeightedGroupsRoutingOptions, System.IServiceProvider> configure) { throw null; }

        public static IRoutingStrategyBuilder ConfigureWeightedGroups(this IRoutingStrategyBuilder builder, System.Action<WeightedGroupsRoutingOptions> configure) { throw null; }
    }

    public static partial class StandardHedgingHandlerBuilderExtensions
    {
        public static IStandardHedgingHandlerBuilder Configure(this IStandardHedgingHandlerBuilder builder, Configuration.IConfigurationSection section) { throw null; }

        public static IStandardHedgingHandlerBuilder Configure(this IStandardHedgingHandlerBuilder builder, System.Action<HttpStandardHedgingResilienceOptions, System.IServiceProvider> configure) { throw null; }

        public static IStandardHedgingHandlerBuilder Configure(this IStandardHedgingHandlerBuilder builder, System.Action<HttpStandardHedgingResilienceOptions> configure) { throw null; }

        public static IStandardHedgingHandlerBuilder SelectPipelineBy(this IStandardHedgingHandlerBuilder builder, System.Func<System.IServiceProvider, System.Func<System.Net.Http.HttpRequestMessage, string>> selectorFactory) { throw null; }

        public static IStandardHedgingHandlerBuilder SelectPipelineByAuthority(this IStandardHedgingHandlerBuilder builder) { throw null; }
    }

    public partial class UriEndpoint
    {
        [System.ComponentModel.DataAnnotations.Required]
        public System.Uri? Uri { get { throw null; } set { } }
    }

    public partial class UriEndpointGroup
    {
        [System.ComponentModel.DataAnnotations.Length(1, int.MaxValue)]
        [Options.ValidateEnumeratedItems]
        public System.Collections.Generic.IList<WeightedUriEndpoint> Endpoints { get { throw null; } set { } }
    }

    public enum WeightedGroupSelectionMode
    {
        EveryAttempt = 0,
        InitialAttempt = 1
    }

    public partial class WeightedGroupsRoutingOptions
    {
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Length(1, int.MaxValue)]
        [Options.ValidateEnumeratedItems]
        public System.Collections.Generic.IList<WeightedUriEndpointGroup> Groups { get { throw null; } set { } }

        public WeightedGroupSelectionMode SelectionMode { get { throw null; } set { } }
    }

    public partial class WeightedUriEndpoint
    {
        [System.ComponentModel.DataAnnotations.Required]
        public System.Uri? Uri { get { throw null; } set { } }

        [System.ComponentModel.DataAnnotations.Range(1, 64000)]
        public int Weight { get { throw null; } set { } }
    }

    public partial class WeightedUriEndpointGroup : UriEndpointGroup
    {
        [System.ComponentModel.DataAnnotations.Range(1, 64000)]
        public int Weight { get { throw null; } set { } }
    }
}

namespace Polly
{
    [System.Diagnostics.CodeAnalysis.Experimental("EXTEXP0001", UrlFormat = "https://aka.ms/dotnet-extensions-warnings/{0}")]
    public static partial class HttpResilienceContextExtensions
    {
        public static System.Net.Http.HttpRequestMessage? GetRequestMessage(this ResilienceContext context) { throw null; }

        public static void SetRequestMessage(this ResilienceContext context, System.Net.Http.HttpRequestMessage? requestMessage) { }
    }
}

namespace System.Net.Http
{
    public static partial class HttpResilienceHttpRequestMessageExtensions
    {
        public static Polly.ResilienceContext? GetResilienceContext(this HttpRequestMessage requestMessage) { throw null; }

        public static void SetResilienceContext(this HttpRequestMessage requestMessage, Polly.ResilienceContext? resilienceContext) { }
    }
}